package admin

import (
	"github.com/anchamber-studios/hevonen/services/admin/users/client"
	"github.com/anchamber-studios/hevonen/frontend/types"
	l "github.com/anchamber-studios/hevonen/frontend/layouts"
	c "github.com/anchamber-studios/hevonen/frontend/components"
	"github.com/anchamber-studios/hevonen/frontend/components/table"
	"fmt"
	"github.com/anchamber-studios/hevonen/frontend/components"
)

var bcList []c.BreadCrumbProp = []c.BreadCrumbProp{
	{
		Text: "Users",
		Href: "/admin/users",
	},
}

type UserListProps struct {
	Users []client.User
}

templ UserListWL(session types.Session, props UserListProps) {
	@l.BasicLayout(session, l.LayoutProps{
        Title: "Hevonen - Members",
        BrandName: "Hevonen",
        Content: list(props),
        BreadCrumbs: bcList,
    })
}


templ UserList(props UserListProps) {
	@components.BreadCrumbs(bcList)
	@list(props)
}

templ list(props UserListProps) {
	<section class="py-1">
		<div class="w-full xl:w-8/12 mb-12 xl:mb-0 px-4 mx-auto">
			<div class="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded ">
				<div class="mb-0 py-3 border-0">
					<div class="flex flex-wrap items-center">
						<div class="relative w-full max-w-full flex-grow flex-1">
							<h3 class="font-semibold text-base">Users</h3>
						</div>
						<div class="relative w-full max-w-full flex-grow flex-1 text-right">
							<button
 								hx-get="/members/new"
 								hx-target="#main"
 								hx-push-url="true"
 								class="bg-orange-500 text-white active:bg-orange-600 text-xs font-bold uppercase px-3 py-1 rounded outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150"
 								type="button"
							>
								Add member
							</button>
						</div>
					</div>
				</div>
				<div class="block w-full overflow-x-auto">
					<table id="member-table" class="items-center bg-transparent w-full border-collapse">
						<thead>
							<tr>
								<th
 									data-key="firstName"
 									class="px-6 align-middle border border-solid border-gray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"
								>
									Email
								</th>
								<th
 									data-key="middleName"
 									class="px-6 align-middle border border-solid border-gray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"
								>
									Email Confirmed?
								</th>
								<th
 									data-key="middleName"
 									class="px-6 align-middle border border-solid border-gray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"
								>
									Active?
								</th>
								<th
 									data-key="lastName"
 									class="px-6 align-middle border border-solid border-gray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"
								>
									Last Updated
								</th>
								<th
 									data-key="email"
 									class="px-6 align-middle border border-solid border-gray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left"
								>
									Created
								</th>
							</tr>
						</thead>
						<tbody hx-target="#main">
							for _, user := range props.Users {
								<tr data-id={ user.ID } class="dark:hover:bg-gray-800" 
									hx-get={fmt.Sprintf("/admin/users/%s", user.ID)}
									hx-push-url="true">
									<th
 										data-value={ user.Email }
 										class="border-t-0 px-6 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap p-4 text-left text-blueGray-700 "
									>
										{ user.Email }
									</th>
									@table.BoolColumn(user.EmailConfirmed, []string{"Yes", "No"})
									@table.BoolColumn(user.Active, []string{"Yes", "No"})
									@table.DateColumn(user.UpdatedAt)
									@table.DateColumn(user.CreatedAt)
								</tr>
							}
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</section>
}
