package members

import (
	l "github.com/anchamber-studios/hevonen/frontend/pages/layouts"
	c "github.com/anchamber-studios/hevonen/frontend/pages/components"
)

type MemberListProps struct {
	Members []Member
    Search string
}

type Member struct {
	ID        string
	FirstName string
	LastName  string
	Email     string
	Phone     string
	Height    int
	Weight    int
}

var bcList []c.BreadCrumbProp = []c.BreadCrumbProp{
	{
		Text: "Home",
		Href: "/",
	},
	{
		Text: "Members",
		Href: "/members",
	},
}

templ MemberList(props MemberListProps) {
    @c.BreadCrumbs(bcList)
	@memberTable(props)
}

templ MemberListWL(props MemberListProps) {
	@l.BasicLayout(l.LayoutProps{
        Title: "Hevonen - Members",
        BrandName: "Hevonen",
        Content: memberTable(props),
        BreadCrumbs: bcList,
    })
}


templ memberTable(props MemberListProps) {
	<section>
        <div class="flex justify-between p-2"
            hx-target="#main">
			<input
                value={props.Search}
 				id="datatable-search-input"
 				type="search"
 				class="block min-w-0 max-w-md flex-auto rounded border border-solid border-neutral-300 bg-transparent bg-clip-padding px-3 py-[0.25rem] text-base font-normal leading-[1.6] text-neutral-700 outline-none transition duration-200 ease-in-out focus:z-[3] focus:border-primary focus:text-neutral-700 focus:shadow-[inset_0_0_0_1px_rgb(59,113,202)] focus:outline-none dark:border-neutral-600 dark:text-neutral-200 dark:placeholder:text-neutral-200 dark:focus:border-primary"
 				placeholder="Search"
 				aria-label="Search"
 				aria-describedby="button-addon1"
			/>
        @c.ButtonLink(c.ButtonLinkProps{ButtonProps: c.ButtonProps{Text: "Add Member"}, Href: "/members/new"})
		</div>
		if props.Members == nil || len(props.Members) == 0 {
			<div class="h-screen flex items-center justify-center">
				<div class="flex flex-col items-center">
					@c.AngryFace()
					<h2 class="text-2xl font-bold">No members found</h2>
				</div>
			</div>
		} else {
			<div id="datatable"></div>
			<script src="https://cdn.jsdelivr.net/npm/tw-elements/dist/js/tw-elements.umd.min.js"></script>
			@initTable(props.Members)
		}
	</section>
}

script initTable(members []Member) {
    const basicData = {
        columns: [
            { label: 'ID', field: 'ID', sort: true },
            { label: 'First Name', field: 'FirstName', sort: true },
            { label: 'Last Name', field: 'LastName', sort: true },
            { label: 'Email', field: 'Email', sort: true },
            { label: 'Phone', field: 'Phone', sort: true },
        ],
        rows: members
    };
    const instance = new te.Datatable(document.getElementById('datatable'), basicData);
    document.getElementById('datatable-search-input').addEventListener('input', (e) => {
        instance.search(e.target.value);
    });
}
