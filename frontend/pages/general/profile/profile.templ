package profile

import (
	"strconv"
	l "github.com/anchamber-studios/hevonen/frontend/pages/layouts"
	c "github.com/anchamber-studios/hevonen/frontend/pages/components"
	"github.com/anchamber-studios/hevonen/frontend/types"
)

type Profile struct {
	ID         string `json:"id" form:"id"`
	FirstName  string `json:"firstName" form:"firstName"`
	MiddleName string `json:"middleName" form:"middleName"`
	LastName   string `json:"lastName" form:"lastName"`
	Height     uint   `json:"height" form:"height"`
	Weight     uint   `json:"weight" form:"weight"`
	Birthday   string `json:"birthday" form:"birthday"`
}

type ProfilePageProps struct {
	Csrf    string
	Profile *Profile
}

var bcList []c.BreadCrumbProp = []c.BreadCrumbProp{
	{
		Text: "Profile",
		Href: "/u/p",
	},
}

templ ProfilePageWL(session types.Session, props ProfilePageProps) {
	@l.BasicLayout(session, l.LayoutProps{
        Title: "Hevonen - Members",
        BrandName: "Hevonen",
        Content: profilePage(props),
        BreadCrumbs: bcList,
    })
}

templ ProfilePage(props ProfilePageProps) {
	@profilePage(props)
}

templ profilePage(props ProfilePageProps) {
	<section class="container pl-2">
		<details open>
			<summary>General</summary>
			@profileForm(props)
		</details>
		<details open>
			<summary>Contact Info</summary>
			<form>
				<button type="submit" class="my-2 px-8 py-1 bg-green-800">Save</button>
				<button type="submit" class="my-2 px-8 py-1 bg-green-800">Add</button>
			</form>
		</details>
		<details open>
			<summary>Addresses</summary>
			<form>
				<button type="submit" class="my-2 px-8 py-1 bg-green-800">Save</button>
				<button type="submit" class="my-2 px-8 py-1 bg-green-800">Add</button>
			</form>
		</details>
	</section>
}

templ profileForm(props ProfilePageProps) {
	<form hx-put="/u/p">
		<input type="hidden" name="id" value={ props.Profile.ID }/>
		<div class="pb-2 flex flex-col">
			<label for="firstName">First Name</label>
			<input
 				value={ props.Profile.FirstName }
 				id="firstName"
 				type="text"
 				name="firstName"
 				autocomplete="firstName"
 				required
 				class="w-96 p-1 dark:text-gray-900"
			/>
		</div>
		<div class="pb-2 flex flex-col">
			<label for="middleName">Middle Name</label>
			<input
 				value={ props.Profile.MiddleName }
 				id="middleName"
 				type="text"
 				name="middleName"
 				autocomplete="middleName"
 				class="w-96 p-1 dark:text-gray-900"
			/>
		</div>
		<div class="pb-2 flex flex-col">
			<label for="lastName">Last Name</label>
			<input
 				value={ props.Profile.LastName }
 				id="lastName"
 				type="text"
 				name="lastName"
 				autocomplete="lastName"
 				class="w-96 p-1 dark:text-gray-900"
			/>
		</div>
		<div class="pb-2 flex flex-col">
			<label for="birthday">Birthday</label>
			<input
 				value={ props.Profile.Birthday }
 				id="birthday"
 				type="date"
 				name="birthday"
 				autocomplete="birthday"
 				class="w-48 p-1 dark:text-gray-900"
			/>
		</div>
		<div class="flex">
			<div class="w-24 pb-2 flex flex-col">
				<label class="w-24" for="height">Heigt (cm)</label>
				<input
 					value={ strconv.FormatInt(int64(props.Profile.Height), 10) }
 					id="height"
 					type="number"
 					name="height"
 					autocomplete="height"
 					class="w-24 p-1 dark:text-gray-900"
				/>
			</div>
			<div class="w-24 pb-2 pl-2 flex flex-col">
				<label class="w-24" for="weight">Weight (kg)</label>
				<input
 					value={ strconv.FormatInt(int64(props.Profile.Weight), 10) }
 					id="weight"
 					type="number"
 					name="weight"
 					autocomplete="weight"
 					class="w-24 p-1 dark:text-gray-900"
				/>
			</div>
		</div>
		<button type="submit" class="my-2 px-8 py-1 bg-green-800">Save</button>
	</form>
}
