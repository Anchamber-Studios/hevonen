package components

templ SideNav(brandName string) {
	<!-- TW Elements is free under AGPL, with commercial license required for specific uses. See more details: https://tw-elements.com/license/ and contact us for queries at tailwind@mdbootstrap.com -->
	<!-- Sidenav -->
	<nav
 		id="sidenav-main"
        hx-target="#main"
 		class="absolute left-0 top-0 z-[1035] h-full w-60 -translate-x-full overflow-hidden bg-white shadow-[0_4px_12px_0_rgba(0,0,0,0.07),_0_2px_4px_rgba(0,0,0,0.05)] data-[te-sidenav-hidden='false']:translate-x-0 dark:bg-zinc-800"
 		data-te-sidenav-init
 		data-te-sidenav-hidden="true"
 		data-te-sidenav-position="absolute"
 		data-te-sidenav-accordion="true"
	>
		<a
 			class="mb-3 flex items-center justify-center border-b-2 border-solid border-gray-100 py-6 outline-none"
 			href="#!"
 			data-te-ripple-init
 			data-te-ripple-color="primary"
		>
			<img
 				id="te-logo"
 				class="mr-2 w-6"
 				src="/public/favicon.svg"
 				alt="TE Logo"
 				draggable="false"
			/>
			<span>{ brandName }</span>
		</a>
		<ul
 			class="relative m-0 list-none px-[0.2rem] pb-12"
 			data-te-sidenav-menu-ref
		>
            @SideNavNavigationLink(SideNavNavigationLinkProps{
                Header: "",
                Icon: Home(),
                Href: "/",
                Name: "Overview",
            })

            
            @SideNavNavigationLink(SideNavNavigationLinkProps{
                Header: "Admin",
                Icon: Users(),
                Href: "/members",
                Name: "Members",
            })
        </ul>
    </nav>
	<!-- Sidenav -->
}

type SideNavNavigationLinkProps struct {
	Header string
	Name   string
	Href   string
	Icon   templ.Component
}

templ SideNavNavigationLink(props SideNavNavigationLinkProps) {
	<li class="relative pt-4">
        if props.Header != "" {
            <span class="px-6 py-4 text-[0.6rem] font-bold uppercase text-gray-600 dark:text-gray-400">
                { props.Header }
            </span>
        }
		<a
            hx-get={ props.Href } 
            hx-push-url="true"
 			class="flex cursor-pointer items-center truncate rounded-[5px] px-6 py-[0.45rem] text-[0.85rem] text-gray-600 outline-none transition duration-300 ease-linear hover:bg-slate-50 hover:text-inherit hover:outline-none focus:bg-slate-50 focus:text-inherit focus:outline-none active:bg-slate-50 active:text-inherit active:outline-none data-[te-sidenav-state-active]:text-inherit data-[te-sidenav-state-focus]:outline-none motion-reduce:transition-none dark:text-gray-300 dark:hover:bg-white/10 dark:focus:bg-white/10 dark:active:bg-white/10"
 			data-te-sidenav-link-ref>
			if props.Icon != nil {
                <span class="mr-4 [&>svg]:h-3.5 [&>svg]:w-3.5 [&>svg]:text-gray-400 dark:[&>svg]:text-gray-300">
				    @props.Icon
			    </span>
            }
			<span>{ props.Name }</span>
		</a>
	</li>
}
