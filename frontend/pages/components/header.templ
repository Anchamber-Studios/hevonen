package components

import "github.com/anchamber-studios/hevonen/frontend/pages/theme"
import "fmt"

type HeaderProps struct {
	BreadCrumbs []BreadCrumbProp
	User		User
}

type User struct {
	ID    string
	Email string
}

type BreadCrumbProp struct {
	Text string
	Href string
}

templ Header(props HeaderProps) {
	<nav class={ fmt.Sprintf("flex-no-wrap relative flex w-full items-center justify-between h-[48px] border-b-[1px] border-gray-600 %s", theme.DefaultBGColor) }>
		<div class="flex px-3 ">
			@BreadCrumbs(props.BreadCrumbs)
		</div>
		<div class="flex flex-row-reverse flex-wrap grow items-center justify-between px-3">
			@userArea(props.User)
		</div>
	</nav>
}

templ BreadCrumbs(breadCrumbs []BreadCrumbProp) {
	<nav class="w-full rounded-md" id="header-breadcrumbs" hx-swap-oob="true">
		<ol class="list-reset flex" hx-target="#main">
			<li>
				<span class={ fmt.Sprintf("pr-2 %s", theme.DefaultTextColor) }>/</span>
			</li>
			for i, breadCrumb := range breadCrumbs {
				if i > 0 {
					<li>
						<span class={ fmt.Sprintf("mx-2 %s", theme.DefaultTextColor) }>/</span>
					</li>
				}
				<li>
					<a
 						hx-get={ breadCrumb.Href }
 						hx-push-url="true"
 						class={ fmt.Sprintf("transition duration-150 ease-in-out hover:text-primary-600 focus:text-primary-600 active:text-primary-700 dark:text-primary-400 dark:hover:text-primary-500 dark:focus:text-primary-500 dark:active:text-primary-600 %s", theme.DefaultTextColor) }
					>
						{ breadCrumb.Text }
					</a>
				</li>
			}
		</ol>
	</nav>
}

templ userArea(user User) {
	<div class="relative flex items-center">
		if user.ID != "" {
			<a href="/auth/logout" class="underline text-sm text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-500">
				Logout
			</a>
		} else {
			<a href="/auth/login" class="text-sm text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-500">
				Login
			</a>
		}
	</div>
}
